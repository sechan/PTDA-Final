/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-04-04 01:00:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;

public final class decision_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<html class=\"no-js\" lang=\"\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n");
      out.write("  <title></title>\r\n");
      out.write("  <meta name=\"description\" content=\"\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("  <link rel=\"manifest\" href=\"../site.webmanifest\">\r\n");
      out.write("  <link rel=\"apple-touch-icon\" href=\"../icon.png\">\r\n");
      out.write("  <!-- Place favicon.ico in the root directory -->\r\n");
      out.write("\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../css/normalize.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../css/main.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../css/index.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/3/w3.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!--[if lte IE 9]>\r\n");
      out.write("<p class=\"browserupgrade\">You are using an <strong>outdated</strong> browser. Please <a href=\"https://browsehappy.com/\">upgrade your browser</a> to improve your experience and security.</p>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("\r\n");
      out.write("<!-- Add your site or application content here -->\r\n");
      out.write("<script src=\"../js/vendor/modernizr-3.6.0.min.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\" integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script>window.jQuery || document.write('<script src=\"../js/vendor/jquery-3.3.1.min.js\"><\\/script>')</script>\r\n");
      out.write("<script src=\"../js/plugins.js\"></script>\r\n");
      out.write("<script src=\"../js/main.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/main.js\"></script>\r\n");
      out.write(" <style type=\"text/css\">\r\n");
      out.write("    #likert { text-align:center; }\r\n");
      out.write("    #likert td { width: 70px; }\r\n");
      out.write(" </style>\r\n");
      out.write("\r\n");
      out.write("<!-- Basic Navigation -->\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("  <nav class=\"navbar\">\r\n");
      out.write("  <a href=\"../index.html\" class=\"w3-button w3-bar-item\">Home</a>\r\n");
      out.write("  <a href=\"decision.jsp\" class=\"w3-button w3-bar-item\">Decision Guide</a>\r\n");
      out.write("  <a href=\"summary.jsp\" class=\"w3-button w3-bar-item\">Summary</a>\r\n");
      out.write("  <a href=\"forumPosts.jsp\" class=\"w3-button w3-bar-item\">Forums</a>\r\n");
      out.write("  <a href=\"doctor.jsp\" class=\"w3-button w3-bar-item\">Doctor Portal</a>\r\n");
      out.write("  <div class=\"dropdown\">\r\n");
      out.write("  <button class=\"dropbtn w3-bar-item\">More</button>\r\n");
      out.write("  <div class=\"dropdown-content\">\r\n");
      out.write("  <a href=\"../html/register.html\" class=\"w3-button w3-bar-item\">Sign Up</a>\r\n");
      out.write("  <a href=\"../html/login.html\" class=\"w3-button w3-bar-item\">Sign In</a>\r\n");
      out.write("  <a href=\"accountPage.jsp\" class=\"w3-button w3-bar-item\">My Account</a>\r\n");
      out.write("  <a href=\"../html/contact.html\" class=\"w3-button w3-bar-item\">Contact</a>\r\n");
      out.write("  </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  </nav>\r\n");
      out.write("  </div>\r\n");
      out.write("  <hr>\r\n");
      out.write("\r\n");

//HttpSession sess = request.getSession();
//String id = (String)sess.getAttribute("ID");

	  try {

			Class.forName("com.mysql.jdbc.Driver").newInstance(); 

			String url="jdbc:mysql://localhost:3306/mydb";
			String user="root";
			String pword="root";

			Connection conn = DriverManager.getConnection(url, user, pword);


			String sql = "SELECT * FROM questions";

			PreparedStatement ps = conn.prepareStatement(sql);

			ResultSet rs = ps.executeQuery();
			
			rs.last();
			
			int size = rs.getRow();
			
			rs.beforeFirst();
			
			String questions [] = new String[size];
			int originalValues [] = new int[size];
			int values [] = new int[size];
			
			int counter = 0;

while(rs.next())
{
	questions[counter] = rs.getString("questionText");
	values [counter] = Math.abs(Integer.parseInt(rs.getString("value")));
	originalValues [counter] = Integer.parseInt(rs.getString("value"));
	counter++;
}


for(int i = 0; i < size; i++)
{
	for(int j = 0; j < size; j++)
	{
		if((values[i] < values[j]) && (i != j))
		{
		
			int tempVal = values[j];
			values[j] = values[i];
			values[i] = tempVal;
			
			String tempText = questions[j];
			questions[j] = questions[i];
			questions[i] = tempText;
			
			tempVal = originalValues[j];
			originalValues[j] = originalValues[i];
			originalValues[i] = tempVal;
		}
	}
}

	out.println("<form action = 'decisionGuide.jsp'>");
	out.println("<center>");
	out.println("<div class='postComment'>");
	out.println("<b><p id = 'question'></p></b>");
	out.println("</div>");
	out.println("<div class='postComment'>");
	out.println("<table id='likert'> <tr>");
	out.println("<td><input id='radScoreStart' type='radio' name='Score' value='1' /></td>");
	out.println("<td><input type='radio' name='Score' value='2' /></td>");
	out.println("<td><input type='radio' name='Score' value='3' /></td>");
	out.println("<td><input type='radio' name='Score' value='4' /></td>");
    out.println("<td><input id='radScoreEnd' type='radio' name='Score' value='5' /></td> </tr>");
	out.println("<tr><td>Strongly Disagree </td> <td></td> <td></td> <td></td> <td> Strongly Agree </td> </tr> </table>");
	out.println("<br>");
	out.println("</div>");
	out.println("<div class='postComment'>");
	out.println("<button id = 'next' type = 'button' onClick = 'nextQuestion()'> Next Question </button><br><br>");
	out.println("<button id = 'finish' type = 'submit'> Complete </button> </center>");
	out.println("<input type = 'hidden' id ='responseField' name = 'responseField' value = '1'>");
	out.println("<input type = 'hidden' id ='valueField' name = 'valueField' value = '1'>");
	out.println("</div>");
	out.println("</form>");
	
	
	out.println("<script> var currentQuestion = 0; var responses = []");
	out.println("var questions = [");
	for(int i = 0; i < size-1; i++)
	{
		out.println("'"+questions[i]+"',");
	}
	out.println("'"+questions[size-1]+"'];");
		out.println("var values = [");
	for(int i = 0; i < size-1; i++)
	{
		out.println("'"+originalValues[i]+"',");
	}
	out.println("'"+originalValues[size-1]+"'];");
	out.println("$(window).on('load', function(){ document.getElementById('question').innerHTML = questions[currentQuestion]; document.getElementById('finish').disabled = true;});");
	
	out.println("function nextQuestion() {");
	out.println("if(currentQuestion < questions.length) {  var radios = document.getElementsByName('Score');");
	out.println("for(var i = 0; i < 5; i++) {if(radios[i].checked) { responses[currentQuestion] = radios[i].value;}}");
	out.println("currentQuestion++; if(currentQuestion != questions.length){document.getElementById('question').innerHTML = questions[currentQuestion];}}"); 
	out.println("completed();}");
	
	out.println("function completed(){if(typeof(responses["+size+"-1])!='undefined') {document.getElementById('responseField').value = (JSON.stringify(responses)); document.getElementById('valueField').value = (JSON.stringify(values)); document.getElementById('next').disabled = true; document.getElementById('finish').disabled = false;}}");

	out.println("</script>");

  } catch(Exception e) {
    out.println(e.getMessage());
  }



      out.write("\r\n");
      out.write("  <hr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
